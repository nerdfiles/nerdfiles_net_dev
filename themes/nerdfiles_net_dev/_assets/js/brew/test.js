// Generated by CoffeeScript 1.3.3
(function() {
  var __slice = [].slice;

  (function() {
    /*
      Revealing Pattern
    
      @deps jQuery
    */

    var Dream, builder, nightmare;
    (function() {
      var _ref, _ref1;
      if ((_ref = window.ƒ) == null) {
        window.ƒ = {};
      }
      if ((_ref1 = ƒ.Utils) == null) {
        ƒ.Utils = {};
      }
      return ƒ.App = (function() {
        var init;
        return init = function() {
          return ƒ.Utils.log('App init...');
        };
      })();
    })(jQuery);
    /*
      Commander Pattern
    */

    (function() {
      var CommandManager, commander, runner;
      commander = (function() {
        var c1, c2, cmmds, pv1;
        pv1 = 0;
        c1 = function() {
          return pv1 = "Command 1";
        };
        c2 = function() {
          return pv1 = "Command 2";
        };
        return cmmds = {
          command1: c1,
          command2: c2,
          value: function() {
            return pv1;
          }
        };
      })();
      CommandManager = (function() {

        function CommandManager() {
          var cmmds;
          cmmds = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
          this.cmmds = cmmds;
        }

        CommandManager.prototype.run = function() {
          var command, _i, _len, _ref, _results;
          _ref = this.cmmds;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            command = _ref[_i];
            _results.push(command());
          }
          return _results;
        };

        return CommandManager;

      })();
      runner = new CommandManager(commander.command1, commander.command2);
      runner.run();
      return commander.value();
    })();
    /*
      Builder Pattern
    
      With Hypermedia example.
    */

    Dream = (function() {

      function Dream(defParams) {
        if (defParams == null) {
          defParams = {};
        }
        this.dateOf = new Date(defParams.date) || new Date;
        this.contexts = defParams.contexts || [];
        this.duration = defParams.duration || 0;
      }

      Dream.prototype.newDream = function(desc, params) {
        var dateOf;
        if (params == null) {
          params = {};
        }
        return dateOf = (params.date && new Date(params.date)) || this.date;
      };

      return Dream;

    })();
    builder = new Dream({
      date: "10/22/2012"
    });
    builder.newDream("Descriptively.");
    nightmare = new Dream({
      date: "11/11/2011",
      contexts: ["nightmare"]
    });
    return nightmare.newDream("Boo.", {
      contexts: ["Ego", "Id"]
    });
  })();

}).call(this);
